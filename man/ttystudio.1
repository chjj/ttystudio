.ds q \N'34'
.TH ttystudio 1

.SH NAME
ttystudio \- a terminal to GIF/APNG recorder

.SH SYNOPSIS
.nf
.B ttystudio [options] [input] [output]
.fi

.SH DESCRIPTION
.B ttystudio
is a terminal recorder that can write to GIFs or APNGs without any external
dependencies or GUI playback.

.SH OPTIONS

.TP
.BI \-l,\ \-\-log
Log status to stderr (default now).

.TP
.BI \-q,\ \-\-quiet
Do not log status to stderr.

.TP
.BI \-f,\ \-\-font\ [font-file]
Choose a BDF font in ttystudio's JSON format.

.TP
.BI \-b,\ \-\-font-bold\ [font-file]
Choose a bold BDF font in ttystudio's JSON format.

.TP
.BI \-d,\ \-\-delay\ [delay-ms]
Specify frame delay in ms (default: 100).

.TP
.BI \-i,\ \-\-interval\ [interval-ms]
Specify frame snapshot interval in ms (default: 100).

.TP
.BI \-k,\ \-\-key\ [quit-key]
Choose a key combination to quit recording (default: C-q).

.TP
.BI \-n,\ \-\-num-plays\ [num-plays]
Specify a number of plays for the animation (default: 0 - infinite).

.TP
.BI \-r,\ \-\-range\ [frame-range]
Choose a range of frames to compile. e.g. 5-200.

.TP
.BI \-x,\ \-\-ratio\ [pixel-cell-ratio]
Choose pixel to cell ratio. This option is useless right now since it is
overwritten by the font (default: 8x14).

.TP
.BI \-t,\ \-\-term\ [term-name]
Choose the terminal name for terminfo.

.TP
.BI \-\-palette
Use a global palette for APNGs instead of RGBA.

.TP
.BI \-\-no-palette,\ \-\-rgba,\ \-\-lct
Use RGBA for APNGs instead of a global palette. This will also avoid building a
global palette for GIFs and only use a local color table for each frame.

.TP
.BI \-\-border\ [width,r,g,b,a]
Add a border around the animation using the specified parameters.

.TP
.BI play,\ \-\-play
Replay a frames file in the terminal.

.TP
.BI record,\ \-\-record
Explicitly choose to record (not very useful).

.TP
.BI compile,\ \-\-compile
Explicitly choose to compile (not very useful).

.TP
.BI screenshot,\ \-\-screenshot
Start ttystudio in screenshot mode. It will take a screenshot on `C-p` unless
specified otherwise by `--screenshot-key`.

.TP
.BI \-\-screenshot\-key
Set the screenshot key when in screenshot mode. Default is `C-p`.

.TP
.BI screenshot,\ \-\-screenshot
Start ttystudio in screenshot mode. It will take a screenshot on `C-p` unless
specified otherwise by `--screenshot-key`.

.TP
.BI screencast,\ \-\-screencast
Start ttystudio in screencast mode. Also responds to `--screenshot-key`,
and takes a screenshot whenever a changed frame is rendered. Use the
screenshot key to add frames where you need to give the viewer time
to read.

.TP
.BI \-\-screencast-padding\ [frame-count]
When in screencast mode, this sets the number of frames added for each
press of the screenshot key. So if you have a delay of 500ms per frame
and a screencast padding of 2, each hit of the screenshot key adds
frames with the current screenshot to cover one second. Use to reduce
the number of times you hit the screenshot key when recording a
screencast. (default: 1)


.TP
.BI screenshot,\ \-\-screenshot
Start ttystudio in screenshot mode. It will take a screenshot on `C-p` unless
specified otherwise by `--screenshot-key`.


.TP
.BI \-\-version
Display ttystudio version.

.TP
.BI \-h,\ \-\-help
Display help information.

.SH LIBRARY
For running programmatically.

.B Example

    var ttystudio = require('ttystudio')
      , ANSIWriter = ttystudio.writer
      , GIFWriter = ttystudio.gif
      , PNGWriter = ttystudio.png
      , compiler = ttystudio.compile
      , recorder = ttystudio.record
      , player = ttystudio.play;

.SH EXAMPLES

    $ ttystudio output.gif --log # record and compile
    $ ttystudio frames.json --log # record
    $ ttystudio frames.json output.gif --range=0-50 # compile

.SH BUGS
Please report any bugs to https://github.com/chjj/ttystudio.

.SH LICENSE
Copyright (c) 2015, Christopher Jeffrey (MIT License)

.SH "SEE ALSO"
.BR ttyrec(1),
.BR ttyplay(1),
.BR ttygif(1)
